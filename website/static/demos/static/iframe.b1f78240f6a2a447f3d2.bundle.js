(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{1526:function(n,t,e){"use strict";var o=e(38),r=e.n(o),a=e(5),i=e.n(a),l=e(8),s=e.n(l),d=e(15),c=e.n(d),m=e(14),u=e.n(m),b=e(16),p=e.n(b),h=e(670),f=e.n(h),k=e(36);function g(){var n=r()(["\n      <style>\n        :host {\n          background: grey;\n          display: block;\n          padding: 25px;\n        }\n\n        h1 {\n          color: white;\n          font-size: 25px;\n          margin: 0;\n        }\n\n        :host(.right)  {\n          background: green;\n          text-align: right;\n        }\n\n        :host(.right) h1 {\n          color: orange;\n          text-align: right;\n        }\n\n        :host(.right) div {\n          text-align: right;\n        }\n      </style>\n      <h1>My Example</h1>\n      <div>\n        <slot></slot>\n      </div>\n    "]);return g=function(){return n},n}var y=function(n){function t(){var n;return i()(this,t),(n=c()(this,u()(t).call(this))).attachShadow({mode:"open"}),n}return p()(t,n),s()(t,[{key:"connectedCallback",value:function(){this.update()}},{key:"update",value:function(){Object(k.render)(this.renderShadowDom(),this.shadowRoot)}},{key:"renderShadowDom",value:function(){return Object(k.html)(g())}}]),t}(f()(HTMLElement));customElements.define("example-vanilla",y)},673:function(n,t,e){e(229),e(674),n.exports=e(675)},675:function(n,t,e){"use strict";e.r(t),function(n){var t=e(46),o=e(667);Object(o.setOptions)({hierarchyRootSeparator:/\|/});var r=e(852);Object(t.configure)(function(){r.keys().forEach(function(n){return r(n)})},n)}.call(this,e(198)(n))},852:function(n,t,e){var o={"./example.stories.js":853,"./index.stories.js":859};function r(n){var t=a(n);return e(t)}function a(n){var t=o[n];if(!(t+1)){var e=new Error("Cannot find module '"+n+"'");throw e.code="MODULE_NOT_FOUND",e}return t}r.keys=function(){return Object.keys(o)},r.resolve=a,n.exports=r,r.id=852},853:function(n,t,e){"use strict";e.r(t),function(n){e.d(t,"withStorySource",function(){return P}),e.d(t,"__STORY__",function(){return w}),e.d(t,"__ADDS_MAP__",function(){return A});var o=e(126),r=e.n(o),a=e(38),i=e.n(a),l=e(46),s=e(149),d=e(189),c=e(668),m=e(669),u=e(20),b=e(60),p=e(36);function h(){var n=i()(["\n            <li>","</li>\n          "]);return h=function(){return n},n}function f(){var n=i()(['\n      <div style="border:2px dotted ','; padding: 8px 22px; border-radius: 8px">\n        <h1>My name is ',",</h1>\n        <h3>today is ","</h3>\n        <p>","</p>\n        <p>Also, I have:</p>\n        <ul>\n          ","\n        </ul>\n        <p>","</p>\n      </div>\n    "]);return f=function(){return n},n}function k(){var n=i()(["I'm out of ","",""]);return k=function(){return n},n}function g(){var n=i()(["I have a stock of "," ",", costing &dollar;"," each."]);return g=function(){return n},n}function y(){var n=i()(["\n    <button>","</button>\n  "]);return y=function(){return n},n}function v(){var n=i()(["\n    <button .foo="," @click=",">click me</button>\n  "]);return v=function(){return n},n}function O(){var n=i()(["\n    <button @click=",">Go to welcome</button>\n  "]);return O=function(){return n},n}function x(){var n=i()(["\n    <button @click=",">click me</button>\n  "]);return x=function(){return n},n}function $(){var n=i()(["\n    <button @click=",">click me</button>\n  "]);return $=function(){return n},n}var P=e(208).withStorySource,w="import { storiesOf, addParameters } from '@storybook/polymer';\nimport { action } from '@storybook/addon-actions';\nimport { linkTo } from '@storybook/addon-links';\nimport { withBackgrounds } from '@storybook/addon-backgrounds';\nimport { withNotes } from '@storybook/addon-notes';\nimport { document } from 'global';\nimport { withKnobs, text, button, number, select, date, color, array, boolean } from '@storybook/addon-knobs';\n\nimport { html } from 'lit-html';\n\nstoriesOf('Addon|Actions', module)\n  .add(\n    'Action only',\n    () => html`\n    <button @click=${action('log1')}>click me</button>\n  `\n  )\n  .add(\n    'Action and method',\n    () => html`\n    <button @click=${e => action('log2')(e.target)}>click me</button>\n  `\n  );\n\nstoriesOf('Addon|Links', module).add(\n  'To Welcome',\n  () => html`\n    <button @click=${linkTo('Welcome')}>Go to welcome</button>\n  `\n);\n\nstoriesOf('Addon|Backgrounds', module)\n  .addDecorator(\n    withBackgrounds([{ name: 'twitter', value: '#00aced', default: true }, { name: 'facebook', value: '#3b5998' }])\n  )\n  .add(\n    'Button with text',\n    () => `\n    <button>Click me</button>\n    <p>See tab \"Backgrounds\" at the bottom</p>\n  `\n  );\n\nstoriesOf('Addon|Notes', module)\n  .addDecorator(withNotes)\n  .add(\n    'Simple note',\n    () => `\n    <p><strong>See tab \"notes\" at the bottom.</strong></p>\n  `,\n    {\n      notes: 'My notes on some <strong>bold</strong> text',\n    }\n  );\n\nstoriesOf('Core|Methods for rendering', module)\n  .add('html string', () => '<div>Rendered with string</div>')\n  .add('document.createElement', () => {\n    const el = document.createElement('button');\n    el.innerText = 'click me';\n    el.foo = 'bar';\n    el.addEventListener('click', e => alert(e.target.foo));\n    return el;\n  })\n  .add(\n    'lit-html',\n    () => html`\n    <button .foo=${'bar'} @click=${e => alert(e.target.foo)}>click me</button>\n  `\n  );\n\nconst globalParameter = 'globalParameter';\nconst chapterParameter = 'chapterParameter';\nconst storyParameter = 'storyParameter';\n\naddParameters({ globalParameter });\n\nstoriesOf('Core|Parameters', module)\n  .addParameters({ chapterParameter })\n  .add(\n    'passed to story',\n    ({ parameters: { fileName, ...parameters } }) => {\n      return `<div>Parameters are ${JSON.stringify(parameters)}</div>`;\n    },\n    {\n      storyParameter,\n    }\n  );\n\nstoriesOf('Addon|Knobs', module)\n  .addDecorator(withKnobs)\n  .add(\n    'button label',\n    () => html`\n    <button>${text('Button label', 'You can change me in the tab KNOBS')}</button>\n  `\n  )\n  .add('complex', () => {\n    const name = text('Name', 'Jane');\n    const stock = number('Stock', 20, { range: true, min: 0, max: 30, step: 5 });\n    const fruits = {\n      Apple: 'apples',\n      Banana: 'bananas',\n      Cherry: 'cherries',\n    };\n    const fruit = select('Fruit', fruits, 'apples');\n    const price = number('Price', 2.25);\n    const colour = color('Border', 'deeppink');\n    const today = date('Today', new Date('Jan 20 2017 GMT+0'));\n    const items = array('Items', ['Laptop', 'Book', 'Whiskey']);\n    const nice = boolean('Nice', true);\n\n    const stockMessage = stock\n      ? html`I have a stock of ${stock} ${fruit}, costing &dollar;${price} each.`\n      : html`I'm out of ${fruit}${nice ? ', Sorry!' : '.'}`;\n    const dateOptions = { year: 'numeric', month: 'long', day: 'numeric', timeZone: 'UTC' };\n\n    button('Arbitrary action', () => alert('You clicked it!'));\n\n    return html`\n      <div style=\"border:2px dotted ${colour}; padding: 8px 22px; border-radius: 8px\">\n        <h1>My name is ${name},</h1>\n        <h3>today is ${new Date(today).toLocaleDateString('en-US', dateOptions)}</h3>\n        <p>${stockMessage}</p>\n        <p>Also, I have:</p>\n        <ul>\n          ${items.map(\n            item => html`\n            <li>${item}</li>\n          `\n          )}\n        </ul>\n        <p>${nice ? 'Nice to meet you!' : 'Leave me alone!'}</p>\n      </div>\n    `;\n  });\n",A={"Addon|Actions@Action and method":{startLoc:{col:4,line:19},endLoc:{col:3,line:22}},"Addon|Actions@Action only":{startLoc:{col:4,line:13},endLoc:{col:3,line:16}},"Addon|Links@To Welcome":{startLoc:{col:2,line:26},endLoc:{col:3,line:29}},"Addon|Backgrounds@Button with text":{startLoc:{col:4,line:37},endLoc:{col:3,line:41}},"Addon|Notes@Simple note":{startLoc:{col:4,line:47},endLoc:{col:5,line:53}},"Core|Methods for rendering@lit-html":{startLoc:{col:4,line:66},endLoc:{col:3,line:69}},"Core|Methods for rendering@document.createElement":{startLoc:{col:7,line:58},endLoc:{col:3,line:64}},"Core|Methods for rendering@html string":{startLoc:{col:7,line:57},endLoc:{col:61,line:57}},"@click":{startLoc:{col:24,line:62},endLoc:{col:57,line:62}},"Core|Parameters@passed to story":{startLoc:{col:4,line:81},endLoc:{col:5,line:87}},"Addon|Knobs@complex":{startLoc:{col:7,line:98},endLoc:{col:3,line:136}},"Addon|Knobs@button label":{startLoc:{col:4,line:93},endLoc:{col:3,line:96}}};Object(l.storiesOf)("Addon|Actions",n).addDecorator(P("import { storiesOf, addParameters } from '@storybook/polymer';\nimport { action } from '@storybook/addon-actions';\nimport { linkTo } from '@storybook/addon-links';\nimport { withBackgrounds } from '@storybook/addon-backgrounds';\nimport { withNotes } from '@storybook/addon-notes';\nimport { document } from 'global';\nimport { withKnobs, text, button, number, select, date, color, array, boolean } from '@storybook/addon-knobs';\n\nimport { html } from 'lit-html';\n\nstoriesOf('Addon|Actions', module)\n  .add(\n    'Action only',\n    () => html`\n    <button @click=${action('log1')}>click me</button>\n  `\n  )\n  .add(\n    'Action and method',\n    () => html`\n    <button @click=${e => action('log2')(e.target)}>click me</button>\n  `\n  );\n\nstoriesOf('Addon|Links', module).add(\n  'To Welcome',\n  () => html`\n    <button @click=${linkTo('Welcome')}>Go to welcome</button>\n  `\n);\n\nstoriesOf('Addon|Backgrounds', module)\n  .addDecorator(\n    withBackgrounds([{ name: 'twitter', value: '#00aced', default: true }, { name: 'facebook', value: '#3b5998' }])\n  )\n  .add(\n    'Button with text',\n    () => `\n    <button>Click me</button>\n    <p>See tab \"Backgrounds\" at the bottom</p>\n  `\n  );\n\nstoriesOf('Addon|Notes', module)\n  .addDecorator(withNotes)\n  .add(\n    'Simple note',\n    () => `\n    <p><strong>See tab \"notes\" at the bottom.</strong></p>\n  `,\n    {\n      notes: 'My notes on some <strong>bold</strong> text',\n    }\n  );\n\nstoriesOf('Core|Methods for rendering', module)\n  .add('html string', () => '<div>Rendered with string</div>')\n  .add('document.createElement', () => {\n    const el = document.createElement('button');\n    el.innerText = 'click me';\n    el.foo = 'bar';\n    el.addEventListener('click', e => alert(e.target.foo));\n    return el;\n  })\n  .add(\n    'lit-html',\n    () => html`\n    <button .foo=${'bar'} @click=${e => alert(e.target.foo)}>click me</button>\n  `\n  );\n\nconst globalParameter = 'globalParameter';\nconst chapterParameter = 'chapterParameter';\nconst storyParameter = 'storyParameter';\n\naddParameters({ globalParameter });\n\nstoriesOf('Core|Parameters', module)\n  .addParameters({ chapterParameter })\n  .add(\n    'passed to story',\n    ({ parameters: { fileName, ...parameters } }) => {\n      return `<div>Parameters are ${JSON.stringify(parameters)}</div>`;\n    },\n    {\n      storyParameter,\n    }\n  );\n\nstoriesOf('Addon|Knobs', module)\n  .addDecorator(withKnobs)\n  .add(\n    'button label',\n    () => html`\n    <button>${text('Button label', 'You can change me in the tab KNOBS')}</button>\n  `\n  )\n  .add('complex', () => {\n    const name = text('Name', 'Jane');\n    const stock = number('Stock', 20, { range: true, min: 0, max: 30, step: 5 });\n    const fruits = {\n      Apple: 'apples',\n      Banana: 'bananas',\n      Cherry: 'cherries',\n    };\n    const fruit = select('Fruit', fruits, 'apples');\n    const price = number('Price', 2.25);\n    const colour = color('Border', 'deeppink');\n    const today = date('Today', new Date('Jan 20 2017 GMT+0'));\n    const items = array('Items', ['Laptop', 'Book', 'Whiskey']);\n    const nice = boolean('Nice', true);\n\n    const stockMessage = stock\n      ? html`I have a stock of ${stock} ${fruit}, costing &dollar;${price} each.`\n      : html`I'm out of ${fruit}${nice ? ', Sorry!' : '.'}`;\n    const dateOptions = { year: 'numeric', month: 'long', day: 'numeric', timeZone: 'UTC' };\n\n    button('Arbitrary action', () => alert('You clicked it!'));\n\n    return html`\n      <div style=\"border:2px dotted ${colour}; padding: 8px 22px; border-radius: 8px\">\n        <h1>My name is ${name},</h1>\n        <h3>today is ${new Date(today).toLocaleDateString('en-US', dateOptions)}</h3>\n        <p>${stockMessage}</p>\n        <p>Also, I have:</p>\n        <ul>\n          ${items.map(\n            item => html`\n            <li>${item}</li>\n          `\n          )}\n        </ul>\n        <p>${nice ? 'Nice to meet you!' : 'Leave me alone!'}</p>\n      </div>\n    `;\n  });\n",A)).add("Action only",function(){return Object(p.html)($(),Object(s.action)("log1"))}).add("Action and method",function(){return Object(p.html)(x(),function(n){return Object(s.action)("log2")(n.target)})}),Object(l.storiesOf)("Addon|Links",n).addDecorator(P("import { storiesOf, addParameters } from '@storybook/polymer';\nimport { action } from '@storybook/addon-actions';\nimport { linkTo } from '@storybook/addon-links';\nimport { withBackgrounds } from '@storybook/addon-backgrounds';\nimport { withNotes } from '@storybook/addon-notes';\nimport { document } from 'global';\nimport { withKnobs, text, button, number, select, date, color, array, boolean } from '@storybook/addon-knobs';\n\nimport { html } from 'lit-html';\n\nstoriesOf('Addon|Actions', module)\n  .add(\n    'Action only',\n    () => html`\n    <button @click=${action('log1')}>click me</button>\n  `\n  )\n  .add(\n    'Action and method',\n    () => html`\n    <button @click=${e => action('log2')(e.target)}>click me</button>\n  `\n  );\n\nstoriesOf('Addon|Links', module).add(\n  'To Welcome',\n  () => html`\n    <button @click=${linkTo('Welcome')}>Go to welcome</button>\n  `\n);\n\nstoriesOf('Addon|Backgrounds', module)\n  .addDecorator(\n    withBackgrounds([{ name: 'twitter', value: '#00aced', default: true }, { name: 'facebook', value: '#3b5998' }])\n  )\n  .add(\n    'Button with text',\n    () => `\n    <button>Click me</button>\n    <p>See tab \"Backgrounds\" at the bottom</p>\n  `\n  );\n\nstoriesOf('Addon|Notes', module)\n  .addDecorator(withNotes)\n  .add(\n    'Simple note',\n    () => `\n    <p><strong>See tab \"notes\" at the bottom.</strong></p>\n  `,\n    {\n      notes: 'My notes on some <strong>bold</strong> text',\n    }\n  );\n\nstoriesOf('Core|Methods for rendering', module)\n  .add('html string', () => '<div>Rendered with string</div>')\n  .add('document.createElement', () => {\n    const el = document.createElement('button');\n    el.innerText = 'click me';\n    el.foo = 'bar';\n    el.addEventListener('click', e => alert(e.target.foo));\n    return el;\n  })\n  .add(\n    'lit-html',\n    () => html`\n    <button .foo=${'bar'} @click=${e => alert(e.target.foo)}>click me</button>\n  `\n  );\n\nconst globalParameter = 'globalParameter';\nconst chapterParameter = 'chapterParameter';\nconst storyParameter = 'storyParameter';\n\naddParameters({ globalParameter });\n\nstoriesOf('Core|Parameters', module)\n  .addParameters({ chapterParameter })\n  .add(\n    'passed to story',\n    ({ parameters: { fileName, ...parameters } }) => {\n      return `<div>Parameters are ${JSON.stringify(parameters)}</div>`;\n    },\n    {\n      storyParameter,\n    }\n  );\n\nstoriesOf('Addon|Knobs', module)\n  .addDecorator(withKnobs)\n  .add(\n    'button label',\n    () => html`\n    <button>${text('Button label', 'You can change me in the tab KNOBS')}</button>\n  `\n  )\n  .add('complex', () => {\n    const name = text('Name', 'Jane');\n    const stock = number('Stock', 20, { range: true, min: 0, max: 30, step: 5 });\n    const fruits = {\n      Apple: 'apples',\n      Banana: 'bananas',\n      Cherry: 'cherries',\n    };\n    const fruit = select('Fruit', fruits, 'apples');\n    const price = number('Price', 2.25);\n    const colour = color('Border', 'deeppink');\n    const today = date('Today', new Date('Jan 20 2017 GMT+0'));\n    const items = array('Items', ['Laptop', 'Book', 'Whiskey']);\n    const nice = boolean('Nice', true);\n\n    const stockMessage = stock\n      ? html`I have a stock of ${stock} ${fruit}, costing &dollar;${price} each.`\n      : html`I'm out of ${fruit}${nice ? ', Sorry!' : '.'}`;\n    const dateOptions = { year: 'numeric', month: 'long', day: 'numeric', timeZone: 'UTC' };\n\n    button('Arbitrary action', () => alert('You clicked it!'));\n\n    return html`\n      <div style=\"border:2px dotted ${colour}; padding: 8px 22px; border-radius: 8px\">\n        <h1>My name is ${name},</h1>\n        <h3>today is ${new Date(today).toLocaleDateString('en-US', dateOptions)}</h3>\n        <p>${stockMessage}</p>\n        <p>Also, I have:</p>\n        <ul>\n          ${items.map(\n            item => html`\n            <li>${item}</li>\n          `\n          )}\n        </ul>\n        <p>${nice ? 'Nice to meet you!' : 'Leave me alone!'}</p>\n      </div>\n    `;\n  });\n",A)).add("To Welcome",function(){return Object(p.html)(O(),Object(d.linkTo)("Welcome"))}),Object(l.storiesOf)("Addon|Backgrounds",n).addDecorator(P("import { storiesOf, addParameters } from '@storybook/polymer';\nimport { action } from '@storybook/addon-actions';\nimport { linkTo } from '@storybook/addon-links';\nimport { withBackgrounds } from '@storybook/addon-backgrounds';\nimport { withNotes } from '@storybook/addon-notes';\nimport { document } from 'global';\nimport { withKnobs, text, button, number, select, date, color, array, boolean } from '@storybook/addon-knobs';\n\nimport { html } from 'lit-html';\n\nstoriesOf('Addon|Actions', module)\n  .add(\n    'Action only',\n    () => html`\n    <button @click=${action('log1')}>click me</button>\n  `\n  )\n  .add(\n    'Action and method',\n    () => html`\n    <button @click=${e => action('log2')(e.target)}>click me</button>\n  `\n  );\n\nstoriesOf('Addon|Links', module).add(\n  'To Welcome',\n  () => html`\n    <button @click=${linkTo('Welcome')}>Go to welcome</button>\n  `\n);\n\nstoriesOf('Addon|Backgrounds', module)\n  .addDecorator(\n    withBackgrounds([{ name: 'twitter', value: '#00aced', default: true }, { name: 'facebook', value: '#3b5998' }])\n  )\n  .add(\n    'Button with text',\n    () => `\n    <button>Click me</button>\n    <p>See tab \"Backgrounds\" at the bottom</p>\n  `\n  );\n\nstoriesOf('Addon|Notes', module)\n  .addDecorator(withNotes)\n  .add(\n    'Simple note',\n    () => `\n    <p><strong>See tab \"notes\" at the bottom.</strong></p>\n  `,\n    {\n      notes: 'My notes on some <strong>bold</strong> text',\n    }\n  );\n\nstoriesOf('Core|Methods for rendering', module)\n  .add('html string', () => '<div>Rendered with string</div>')\n  .add('document.createElement', () => {\n    const el = document.createElement('button');\n    el.innerText = 'click me';\n    el.foo = 'bar';\n    el.addEventListener('click', e => alert(e.target.foo));\n    return el;\n  })\n  .add(\n    'lit-html',\n    () => html`\n    <button .foo=${'bar'} @click=${e => alert(e.target.foo)}>click me</button>\n  `\n  );\n\nconst globalParameter = 'globalParameter';\nconst chapterParameter = 'chapterParameter';\nconst storyParameter = 'storyParameter';\n\naddParameters({ globalParameter });\n\nstoriesOf('Core|Parameters', module)\n  .addParameters({ chapterParameter })\n  .add(\n    'passed to story',\n    ({ parameters: { fileName, ...parameters } }) => {\n      return `<div>Parameters are ${JSON.stringify(parameters)}</div>`;\n    },\n    {\n      storyParameter,\n    }\n  );\n\nstoriesOf('Addon|Knobs', module)\n  .addDecorator(withKnobs)\n  .add(\n    'button label',\n    () => html`\n    <button>${text('Button label', 'You can change me in the tab KNOBS')}</button>\n  `\n  )\n  .add('complex', () => {\n    const name = text('Name', 'Jane');\n    const stock = number('Stock', 20, { range: true, min: 0, max: 30, step: 5 });\n    const fruits = {\n      Apple: 'apples',\n      Banana: 'bananas',\n      Cherry: 'cherries',\n    };\n    const fruit = select('Fruit', fruits, 'apples');\n    const price = number('Price', 2.25);\n    const colour = color('Border', 'deeppink');\n    const today = date('Today', new Date('Jan 20 2017 GMT+0'));\n    const items = array('Items', ['Laptop', 'Book', 'Whiskey']);\n    const nice = boolean('Nice', true);\n\n    const stockMessage = stock\n      ? html`I have a stock of ${stock} ${fruit}, costing &dollar;${price} each.`\n      : html`I'm out of ${fruit}${nice ? ', Sorry!' : '.'}`;\n    const dateOptions = { year: 'numeric', month: 'long', day: 'numeric', timeZone: 'UTC' };\n\n    button('Arbitrary action', () => alert('You clicked it!'));\n\n    return html`\n      <div style=\"border:2px dotted ${colour}; padding: 8px 22px; border-radius: 8px\">\n        <h1>My name is ${name},</h1>\n        <h3>today is ${new Date(today).toLocaleDateString('en-US', dateOptions)}</h3>\n        <p>${stockMessage}</p>\n        <p>Also, I have:</p>\n        <ul>\n          ${items.map(\n            item => html`\n            <li>${item}</li>\n          `\n          )}\n        </ul>\n        <p>${nice ? 'Nice to meet you!' : 'Leave me alone!'}</p>\n      </div>\n    `;\n  });\n",A)).addDecorator(Object(c.withBackgrounds)([{name:"twitter",value:"#00aced",default:!0},{name:"facebook",value:"#3b5998"}])).add("Button with text",function(){return'\n    <button>Click me</button>\n    <p>See tab "Backgrounds" at the bottom</p>\n  '}),Object(l.storiesOf)("Addon|Notes",n).addDecorator(P("import { storiesOf, addParameters } from '@storybook/polymer';\nimport { action } from '@storybook/addon-actions';\nimport { linkTo } from '@storybook/addon-links';\nimport { withBackgrounds } from '@storybook/addon-backgrounds';\nimport { withNotes } from '@storybook/addon-notes';\nimport { document } from 'global';\nimport { withKnobs, text, button, number, select, date, color, array, boolean } from '@storybook/addon-knobs';\n\nimport { html } from 'lit-html';\n\nstoriesOf('Addon|Actions', module)\n  .add(\n    'Action only',\n    () => html`\n    <button @click=${action('log1')}>click me</button>\n  `\n  )\n  .add(\n    'Action and method',\n    () => html`\n    <button @click=${e => action('log2')(e.target)}>click me</button>\n  `\n  );\n\nstoriesOf('Addon|Links', module).add(\n  'To Welcome',\n  () => html`\n    <button @click=${linkTo('Welcome')}>Go to welcome</button>\n  `\n);\n\nstoriesOf('Addon|Backgrounds', module)\n  .addDecorator(\n    withBackgrounds([{ name: 'twitter', value: '#00aced', default: true }, { name: 'facebook', value: '#3b5998' }])\n  )\n  .add(\n    'Button with text',\n    () => `\n    <button>Click me</button>\n    <p>See tab \"Backgrounds\" at the bottom</p>\n  `\n  );\n\nstoriesOf('Addon|Notes', module)\n  .addDecorator(withNotes)\n  .add(\n    'Simple note',\n    () => `\n    <p><strong>See tab \"notes\" at the bottom.</strong></p>\n  `,\n    {\n      notes: 'My notes on some <strong>bold</strong> text',\n    }\n  );\n\nstoriesOf('Core|Methods for rendering', module)\n  .add('html string', () => '<div>Rendered with string</div>')\n  .add('document.createElement', () => {\n    const el = document.createElement('button');\n    el.innerText = 'click me';\n    el.foo = 'bar';\n    el.addEventListener('click', e => alert(e.target.foo));\n    return el;\n  })\n  .add(\n    'lit-html',\n    () => html`\n    <button .foo=${'bar'} @click=${e => alert(e.target.foo)}>click me</button>\n  `\n  );\n\nconst globalParameter = 'globalParameter';\nconst chapterParameter = 'chapterParameter';\nconst storyParameter = 'storyParameter';\n\naddParameters({ globalParameter });\n\nstoriesOf('Core|Parameters', module)\n  .addParameters({ chapterParameter })\n  .add(\n    'passed to story',\n    ({ parameters: { fileName, ...parameters } }) => {\n      return `<div>Parameters are ${JSON.stringify(parameters)}</div>`;\n    },\n    {\n      storyParameter,\n    }\n  );\n\nstoriesOf('Addon|Knobs', module)\n  .addDecorator(withKnobs)\n  .add(\n    'button label',\n    () => html`\n    <button>${text('Button label', 'You can change me in the tab KNOBS')}</button>\n  `\n  )\n  .add('complex', () => {\n    const name = text('Name', 'Jane');\n    const stock = number('Stock', 20, { range: true, min: 0, max: 30, step: 5 });\n    const fruits = {\n      Apple: 'apples',\n      Banana: 'bananas',\n      Cherry: 'cherries',\n    };\n    const fruit = select('Fruit', fruits, 'apples');\n    const price = number('Price', 2.25);\n    const colour = color('Border', 'deeppink');\n    const today = date('Today', new Date('Jan 20 2017 GMT+0'));\n    const items = array('Items', ['Laptop', 'Book', 'Whiskey']);\n    const nice = boolean('Nice', true);\n\n    const stockMessage = stock\n      ? html`I have a stock of ${stock} ${fruit}, costing &dollar;${price} each.`\n      : html`I'm out of ${fruit}${nice ? ', Sorry!' : '.'}`;\n    const dateOptions = { year: 'numeric', month: 'long', day: 'numeric', timeZone: 'UTC' };\n\n    button('Arbitrary action', () => alert('You clicked it!'));\n\n    return html`\n      <div style=\"border:2px dotted ${colour}; padding: 8px 22px; border-radius: 8px\">\n        <h1>My name is ${name},</h1>\n        <h3>today is ${new Date(today).toLocaleDateString('en-US', dateOptions)}</h3>\n        <p>${stockMessage}</p>\n        <p>Also, I have:</p>\n        <ul>\n          ${items.map(\n            item => html`\n            <li>${item}</li>\n          `\n          )}\n        </ul>\n        <p>${nice ? 'Nice to meet you!' : 'Leave me alone!'}</p>\n      </div>\n    `;\n  });\n",A)).addDecorator(m.withNotes).add("Simple note",function(){return'\n    <p><strong>See tab "notes" at the bottom.</strong></p>\n  '},{notes:"My notes on some <strong>bold</strong> text"}),Object(l.storiesOf)("Core|Methods for rendering",n).addDecorator(P("import { storiesOf, addParameters } from '@storybook/polymer';\nimport { action } from '@storybook/addon-actions';\nimport { linkTo } from '@storybook/addon-links';\nimport { withBackgrounds } from '@storybook/addon-backgrounds';\nimport { withNotes } from '@storybook/addon-notes';\nimport { document } from 'global';\nimport { withKnobs, text, button, number, select, date, color, array, boolean } from '@storybook/addon-knobs';\n\nimport { html } from 'lit-html';\n\nstoriesOf('Addon|Actions', module)\n  .add(\n    'Action only',\n    () => html`\n    <button @click=${action('log1')}>click me</button>\n  `\n  )\n  .add(\n    'Action and method',\n    () => html`\n    <button @click=${e => action('log2')(e.target)}>click me</button>\n  `\n  );\n\nstoriesOf('Addon|Links', module).add(\n  'To Welcome',\n  () => html`\n    <button @click=${linkTo('Welcome')}>Go to welcome</button>\n  `\n);\n\nstoriesOf('Addon|Backgrounds', module)\n  .addDecorator(\n    withBackgrounds([{ name: 'twitter', value: '#00aced', default: true }, { name: 'facebook', value: '#3b5998' }])\n  )\n  .add(\n    'Button with text',\n    () => `\n    <button>Click me</button>\n    <p>See tab \"Backgrounds\" at the bottom</p>\n  `\n  );\n\nstoriesOf('Addon|Notes', module)\n  .addDecorator(withNotes)\n  .add(\n    'Simple note',\n    () => `\n    <p><strong>See tab \"notes\" at the bottom.</strong></p>\n  `,\n    {\n      notes: 'My notes on some <strong>bold</strong> text',\n    }\n  );\n\nstoriesOf('Core|Methods for rendering', module)\n  .add('html string', () => '<div>Rendered with string</div>')\n  .add('document.createElement', () => {\n    const el = document.createElement('button');\n    el.innerText = 'click me';\n    el.foo = 'bar';\n    el.addEventListener('click', e => alert(e.target.foo));\n    return el;\n  })\n  .add(\n    'lit-html',\n    () => html`\n    <button .foo=${'bar'} @click=${e => alert(e.target.foo)}>click me</button>\n  `\n  );\n\nconst globalParameter = 'globalParameter';\nconst chapterParameter = 'chapterParameter';\nconst storyParameter = 'storyParameter';\n\naddParameters({ globalParameter });\n\nstoriesOf('Core|Parameters', module)\n  .addParameters({ chapterParameter })\n  .add(\n    'passed to story',\n    ({ parameters: { fileName, ...parameters } }) => {\n      return `<div>Parameters are ${JSON.stringify(parameters)}</div>`;\n    },\n    {\n      storyParameter,\n    }\n  );\n\nstoriesOf('Addon|Knobs', module)\n  .addDecorator(withKnobs)\n  .add(\n    'button label',\n    () => html`\n    <button>${text('Button label', 'You can change me in the tab KNOBS')}</button>\n  `\n  )\n  .add('complex', () => {\n    const name = text('Name', 'Jane');\n    const stock = number('Stock', 20, { range: true, min: 0, max: 30, step: 5 });\n    const fruits = {\n      Apple: 'apples',\n      Banana: 'bananas',\n      Cherry: 'cherries',\n    };\n    const fruit = select('Fruit', fruits, 'apples');\n    const price = number('Price', 2.25);\n    const colour = color('Border', 'deeppink');\n    const today = date('Today', new Date('Jan 20 2017 GMT+0'));\n    const items = array('Items', ['Laptop', 'Book', 'Whiskey']);\n    const nice = boolean('Nice', true);\n\n    const stockMessage = stock\n      ? html`I have a stock of ${stock} ${fruit}, costing &dollar;${price} each.`\n      : html`I'm out of ${fruit}${nice ? ', Sorry!' : '.'}`;\n    const dateOptions = { year: 'numeric', month: 'long', day: 'numeric', timeZone: 'UTC' };\n\n    button('Arbitrary action', () => alert('You clicked it!'));\n\n    return html`\n      <div style=\"border:2px dotted ${colour}; padding: 8px 22px; border-radius: 8px\">\n        <h1>My name is ${name},</h1>\n        <h3>today is ${new Date(today).toLocaleDateString('en-US', dateOptions)}</h3>\n        <p>${stockMessage}</p>\n        <p>Also, I have:</p>\n        <ul>\n          ${items.map(\n            item => html`\n            <li>${item}</li>\n          `\n          )}\n        </ul>\n        <p>${nice ? 'Nice to meet you!' : 'Leave me alone!'}</p>\n      </div>\n    `;\n  });\n",A)).add("html string",function(){return"<div>Rendered with string</div>"}).add("document.createElement",function(){var n=u.document.createElement("button");return n.innerText="click me",n.foo="bar",n.addEventListener("click",function(n){return alert(n.target.foo)}),n}).add("lit-html",function(){return Object(p.html)(v(),"bar",function(n){return alert(n.target.foo)})});Object(l.addParameters)({globalParameter:"globalParameter"}),Object(l.storiesOf)("Core|Parameters",n).addDecorator(P("import { storiesOf, addParameters } from '@storybook/polymer';\nimport { action } from '@storybook/addon-actions';\nimport { linkTo } from '@storybook/addon-links';\nimport { withBackgrounds } from '@storybook/addon-backgrounds';\nimport { withNotes } from '@storybook/addon-notes';\nimport { document } from 'global';\nimport { withKnobs, text, button, number, select, date, color, array, boolean } from '@storybook/addon-knobs';\n\nimport { html } from 'lit-html';\n\nstoriesOf('Addon|Actions', module)\n  .add(\n    'Action only',\n    () => html`\n    <button @click=${action('log1')}>click me</button>\n  `\n  )\n  .add(\n    'Action and method',\n    () => html`\n    <button @click=${e => action('log2')(e.target)}>click me</button>\n  `\n  );\n\nstoriesOf('Addon|Links', module).add(\n  'To Welcome',\n  () => html`\n    <button @click=${linkTo('Welcome')}>Go to welcome</button>\n  `\n);\n\nstoriesOf('Addon|Backgrounds', module)\n  .addDecorator(\n    withBackgrounds([{ name: 'twitter', value: '#00aced', default: true }, { name: 'facebook', value: '#3b5998' }])\n  )\n  .add(\n    'Button with text',\n    () => `\n    <button>Click me</button>\n    <p>See tab \"Backgrounds\" at the bottom</p>\n  `\n  );\n\nstoriesOf('Addon|Notes', module)\n  .addDecorator(withNotes)\n  .add(\n    'Simple note',\n    () => `\n    <p><strong>See tab \"notes\" at the bottom.</strong></p>\n  `,\n    {\n      notes: 'My notes on some <strong>bold</strong> text',\n    }\n  );\n\nstoriesOf('Core|Methods for rendering', module)\n  .add('html string', () => '<div>Rendered with string</div>')\n  .add('document.createElement', () => {\n    const el = document.createElement('button');\n    el.innerText = 'click me';\n    el.foo = 'bar';\n    el.addEventListener('click', e => alert(e.target.foo));\n    return el;\n  })\n  .add(\n    'lit-html',\n    () => html`\n    <button .foo=${'bar'} @click=${e => alert(e.target.foo)}>click me</button>\n  `\n  );\n\nconst globalParameter = 'globalParameter';\nconst chapterParameter = 'chapterParameter';\nconst storyParameter = 'storyParameter';\n\naddParameters({ globalParameter });\n\nstoriesOf('Core|Parameters', module)\n  .addParameters({ chapterParameter })\n  .add(\n    'passed to story',\n    ({ parameters: { fileName, ...parameters } }) => {\n      return `<div>Parameters are ${JSON.stringify(parameters)}</div>`;\n    },\n    {\n      storyParameter,\n    }\n  );\n\nstoriesOf('Addon|Knobs', module)\n  .addDecorator(withKnobs)\n  .add(\n    'button label',\n    () => html`\n    <button>${text('Button label', 'You can change me in the tab KNOBS')}</button>\n  `\n  )\n  .add('complex', () => {\n    const name = text('Name', 'Jane');\n    const stock = number('Stock', 20, { range: true, min: 0, max: 30, step: 5 });\n    const fruits = {\n      Apple: 'apples',\n      Banana: 'bananas',\n      Cherry: 'cherries',\n    };\n    const fruit = select('Fruit', fruits, 'apples');\n    const price = number('Price', 2.25);\n    const colour = color('Border', 'deeppink');\n    const today = date('Today', new Date('Jan 20 2017 GMT+0'));\n    const items = array('Items', ['Laptop', 'Book', 'Whiskey']);\n    const nice = boolean('Nice', true);\n\n    const stockMessage = stock\n      ? html`I have a stock of ${stock} ${fruit}, costing &dollar;${price} each.`\n      : html`I'm out of ${fruit}${nice ? ', Sorry!' : '.'}`;\n    const dateOptions = { year: 'numeric', month: 'long', day: 'numeric', timeZone: 'UTC' };\n\n    button('Arbitrary action', () => alert('You clicked it!'));\n\n    return html`\n      <div style=\"border:2px dotted ${colour}; padding: 8px 22px; border-radius: 8px\">\n        <h1>My name is ${name},</h1>\n        <h3>today is ${new Date(today).toLocaleDateString('en-US', dateOptions)}</h3>\n        <p>${stockMessage}</p>\n        <p>Also, I have:</p>\n        <ul>\n          ${items.map(\n            item => html`\n            <li>${item}</li>\n          `\n          )}\n        </ul>\n        <p>${nice ? 'Nice to meet you!' : 'Leave me alone!'}</p>\n      </div>\n    `;\n  });\n",A)).addParameters({chapterParameter:"chapterParameter"}).add("passed to story",function(n){var t=n.parameters,e=(t.fileName,r()(t,["fileName"]));return"<div>Parameters are ".concat(JSON.stringify(e),"</div>")},{storyParameter:"storyParameter"}),Object(l.storiesOf)("Addon|Knobs",n).addDecorator(P("import { storiesOf, addParameters } from '@storybook/polymer';\nimport { action } from '@storybook/addon-actions';\nimport { linkTo } from '@storybook/addon-links';\nimport { withBackgrounds } from '@storybook/addon-backgrounds';\nimport { withNotes } from '@storybook/addon-notes';\nimport { document } from 'global';\nimport { withKnobs, text, button, number, select, date, color, array, boolean } from '@storybook/addon-knobs';\n\nimport { html } from 'lit-html';\n\nstoriesOf('Addon|Actions', module)\n  .add(\n    'Action only',\n    () => html`\n    <button @click=${action('log1')}>click me</button>\n  `\n  )\n  .add(\n    'Action and method',\n    () => html`\n    <button @click=${e => action('log2')(e.target)}>click me</button>\n  `\n  );\n\nstoriesOf('Addon|Links', module).add(\n  'To Welcome',\n  () => html`\n    <button @click=${linkTo('Welcome')}>Go to welcome</button>\n  `\n);\n\nstoriesOf('Addon|Backgrounds', module)\n  .addDecorator(\n    withBackgrounds([{ name: 'twitter', value: '#00aced', default: true }, { name: 'facebook', value: '#3b5998' }])\n  )\n  .add(\n    'Button with text',\n    () => `\n    <button>Click me</button>\n    <p>See tab \"Backgrounds\" at the bottom</p>\n  `\n  );\n\nstoriesOf('Addon|Notes', module)\n  .addDecorator(withNotes)\n  .add(\n    'Simple note',\n    () => `\n    <p><strong>See tab \"notes\" at the bottom.</strong></p>\n  `,\n    {\n      notes: 'My notes on some <strong>bold</strong> text',\n    }\n  );\n\nstoriesOf('Core|Methods for rendering', module)\n  .add('html string', () => '<div>Rendered with string</div>')\n  .add('document.createElement', () => {\n    const el = document.createElement('button');\n    el.innerText = 'click me';\n    el.foo = 'bar';\n    el.addEventListener('click', e => alert(e.target.foo));\n    return el;\n  })\n  .add(\n    'lit-html',\n    () => html`\n    <button .foo=${'bar'} @click=${e => alert(e.target.foo)}>click me</button>\n  `\n  );\n\nconst globalParameter = 'globalParameter';\nconst chapterParameter = 'chapterParameter';\nconst storyParameter = 'storyParameter';\n\naddParameters({ globalParameter });\n\nstoriesOf('Core|Parameters', module)\n  .addParameters({ chapterParameter })\n  .add(\n    'passed to story',\n    ({ parameters: { fileName, ...parameters } }) => {\n      return `<div>Parameters are ${JSON.stringify(parameters)}</div>`;\n    },\n    {\n      storyParameter,\n    }\n  );\n\nstoriesOf('Addon|Knobs', module)\n  .addDecorator(withKnobs)\n  .add(\n    'button label',\n    () => html`\n    <button>${text('Button label', 'You can change me in the tab KNOBS')}</button>\n  `\n  )\n  .add('complex', () => {\n    const name = text('Name', 'Jane');\n    const stock = number('Stock', 20, { range: true, min: 0, max: 30, step: 5 });\n    const fruits = {\n      Apple: 'apples',\n      Banana: 'bananas',\n      Cherry: 'cherries',\n    };\n    const fruit = select('Fruit', fruits, 'apples');\n    const price = number('Price', 2.25);\n    const colour = color('Border', 'deeppink');\n    const today = date('Today', new Date('Jan 20 2017 GMT+0'));\n    const items = array('Items', ['Laptop', 'Book', 'Whiskey']);\n    const nice = boolean('Nice', true);\n\n    const stockMessage = stock\n      ? html`I have a stock of ${stock} ${fruit}, costing &dollar;${price} each.`\n      : html`I'm out of ${fruit}${nice ? ', Sorry!' : '.'}`;\n    const dateOptions = { year: 'numeric', month: 'long', day: 'numeric', timeZone: 'UTC' };\n\n    button('Arbitrary action', () => alert('You clicked it!'));\n\n    return html`\n      <div style=\"border:2px dotted ${colour}; padding: 8px 22px; border-radius: 8px\">\n        <h1>My name is ${name},</h1>\n        <h3>today is ${new Date(today).toLocaleDateString('en-US', dateOptions)}</h3>\n        <p>${stockMessage}</p>\n        <p>Also, I have:</p>\n        <ul>\n          ${items.map(\n            item => html`\n            <li>${item}</li>\n          `\n          )}\n        </ul>\n        <p>${nice ? 'Nice to meet you!' : 'Leave me alone!'}</p>\n      </div>\n    `;\n  });\n",A)).addDecorator(b.withKnobs).add("button label",function(){return Object(p.html)(y(),Object(b.text)("Button label","You can change me in the tab KNOBS"))}).add("complex",function(){var n=Object(b.text)("Name","Jane"),t=Object(b.number)("Stock",20,{range:!0,min:0,max:30,step:5}),e=Object(b.select)("Fruit",{Apple:"apples",Banana:"bananas",Cherry:"cherries"},"apples"),o=Object(b.number)("Price",2.25),r=Object(b.color)("Border","deeppink"),a=Object(b.date)("Today",new Date("Jan 20 2017 GMT+0")),i=Object(b.array)("Items",["Laptop","Book","Whiskey"]),l=Object(b.boolean)("Nice",!0),s=t?Object(p.html)(g(),t,e,o):Object(p.html)(k(),e,l?", Sorry!":".");return Object(b.button)("Arbitrary action",function(){return alert("You clicked it!")}),Object(p.html)(f(),r,n,new Date(a).toLocaleDateString("en-US",{year:"numeric",month:"long",day:"numeric",timeZone:"UTC"}),s,i.map(function(n){return Object(p.html)(h(),n)}),l?"Nice to meet you!":"Leave me alone!")})}.call(this,e(198)(n))},859:function(n,t,e){"use strict";e.r(t),function(n){e.d(t,"withStorySource",function(){return c}),e.d(t,"__STORY__",function(){return m}),e.d(t,"__ADDS_MAP__",function(){return u});var o=e(38),r=e.n(o),a=e(46),i=(e(189),e(20),e(36));e(1526);function l(){var n=r()(['\n    <example-vanilla class="right">example-vanilla user content</example-vanilla>\n  ']);return l=function(){return n},n}function s(){var n=r()(["\n    <example-vanilla>example-vanilla user content</example-vanilla>\n  "]);return s=function(){return n},n}function d(){var n=r()(["\n    <h1>This is your example-vanilla webcomponent</h1>\n  "]);return d=function(){return n},n}var c=e(208).withStorySource,m="import { storiesOf } from '@storybook/polymer';\nimport { linkTo } from '@storybook/addon-links';\nimport { document } from 'global';\n\nimport { html } from 'lit-html';\nimport '../example-vanilla.js';\n\nstoriesOf('Welcome', module).add(\n  'Welcome',\n  () => html`\n    <h1>This is your example-vanilla webcomponent</h1>\n  `\n);\n\nstoriesOf('<example-vanilla>', module)\n  .add(\n    'default',\n    () => html`\n    <example-vanilla>example-vanilla user content</example-vanilla>\n  `\n  )\n  .add(\n    'right',\n    () => html`\n    <example-vanilla class=\"right\">example-vanilla user content</example-vanilla>\n  `\n  );\n",u={"Welcome@Welcome":{startLoc:{col:2,line:9},endLoc:{col:3,line:12}},"<example-vanilla>@right":{startLoc:{col:4,line:23},endLoc:{col:3,line:26}},"<example-vanilla>@default":{startLoc:{col:4,line:17},endLoc:{col:3,line:20}}};Object(a.storiesOf)("Welcome",n).addDecorator(c("import { storiesOf } from '@storybook/polymer';\nimport { linkTo } from '@storybook/addon-links';\nimport { document } from 'global';\n\nimport { html } from 'lit-html';\nimport '../example-vanilla.js';\n\nstoriesOf('Welcome', module).add(\n  'Welcome',\n  () => html`\n    <h1>This is your example-vanilla webcomponent</h1>\n  `\n);\n\nstoriesOf('<example-vanilla>', module)\n  .add(\n    'default',\n    () => html`\n    <example-vanilla>example-vanilla user content</example-vanilla>\n  `\n  )\n  .add(\n    'right',\n    () => html`\n    <example-vanilla class=\"right\">example-vanilla user content</example-vanilla>\n  `\n  );\n",u)).add("Welcome",function(){return Object(i.html)(d())}),Object(a.storiesOf)("<example-vanilla>",n).addDecorator(c("import { storiesOf } from '@storybook/polymer';\nimport { linkTo } from '@storybook/addon-links';\nimport { document } from 'global';\n\nimport { html } from 'lit-html';\nimport '../example-vanilla.js';\n\nstoriesOf('Welcome', module).add(\n  'Welcome',\n  () => html`\n    <h1>This is your example-vanilla webcomponent</h1>\n  `\n);\n\nstoriesOf('<example-vanilla>', module)\n  .add(\n    'default',\n    () => html`\n    <example-vanilla>example-vanilla user content</example-vanilla>\n  `\n  )\n  .add(\n    'right',\n    () => html`\n    <example-vanilla class=\"right\">example-vanilla user content</example-vanilla>\n  `\n  );\n",u)).add("default",function(){return Object(i.html)(s())}).add("right",function(){return Object(i.html)(l())})}.call(this,e(198)(n))}},[[673,3,2]]]);
//# sourceMappingURL=iframe.b1f78240f6a2a447f3d2.bundle.js.map